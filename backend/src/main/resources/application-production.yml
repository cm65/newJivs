spring:
  # Production profile for Render.com deployment
  # Only PostgreSQL is available - disable Redis, Elasticsearch, RabbitMQ

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
      - org.camunda.bpm.spring.boot.starter.CamundaBpmAutoConfiguration
      - org.camunda.bpm.spring.boot.starter.rest.CamundaBpmRestAutoConfiguration
      - org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration

  # Use environment variables for database connection
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10    # Reduced for free tier
      minimum-idle: 2
      connection-timeout: 10000
      idle-timeout: 300000
      max-lifetime: 600000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

  cache:
    type: none  # Disable caching (no Redis)

# Disable health checks for unavailable services
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  health:
    redis:
      enabled: false
    elasticsearch:
      enabled: false
    rabbit:
      enabled: false

# Logging for production
logging:
  level:
    root: INFO
    com.jivs: INFO
    org.springframework.web: WARN
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# JiVS configuration for production
jivs:
  security:
    cors:
      allowed-origins: https://jivs-frontend.onrender.com,https://jivs-backend.onrender.com
      allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600
    websocket:
      allowed-origins: https://jivs-frontend.onrender.com,https://jivs-backend.onrender.com

  storage:
    provider: local
    local:
      base-path: /var/jivs/storage

  extraction:
    max-parallel-jobs: 3      # Reduced for free tier
    batch-size: 500
    temp-directory: /tmp/jivs/extraction

  migration:
    max-parallel-jobs: 2      # Reduced for free tier
    checkpoint-interval: 1000

# Server configuration for Render.com
server:
  address: 0.0.0.0  # Bind to all network interfaces
  port: ${PORT:8080}  # Use Render's PORT environment variable
